<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VSCode on saku note</title>
    <link>https://sakuya712.github.io/categories/vscode/</link>
    <description>Recent content in VSCode on saku note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2020–2021, sakuya712.</copyright>
    <lastBuildDate>Sun, 01 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sakuya712.github.io/categories/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VSCodeでGASの開発をできるようにする</title>
      <link>https://sakuya712.github.io/post/vscode-gas01/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/vscode-gas01/</guid>
      <description>
        
          &lt;p&gt;GASをVSCodeで書きたい&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gas%E3%81%AFtypescript%E3%81%A7%E6%9B%B8%E3%81%91%E3%82%8B&#34;&gt;GASはTypeScriptで書ける&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B&#34;&gt;開発環境を構築する&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-nodejs%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B&#34;&gt;1. Node.jsをインストールする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-typescripttslinstclasp%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&#34;&gt;2. TypeScript、TSLinst、claspをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-google-apps-script-api%E3%82%92%E3%82%AA%E3%83%B3%E3%81%AB%E3%81%99%E3%82%8B&#34;&gt;3. Google Apps Script APIをオンにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B&#34;&gt;4. ワークスペースを作成する。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-clasp%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8D%E3%81%84%E3%82%8D%E5%BC%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B&#34;&gt;5. claspを使っていろいろ弄ってみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-%E5%AE%9F%E9%9A%9B%E3%81%AB%E6%9B%B8%E3%81%84%E3%81%A6push-pull%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B&#34;&gt;6. 実際に書いてpush, pullしてみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h2 id=&#34;gasはtypescriptで書ける&#34;&gt;GASはTypeScriptで書ける&lt;/h2&gt;
&lt;p&gt;Google Apps Scripts（GAS）はJavaScriptベースで作れた言語です。&lt;br&gt;
初期のころはブラウザ上でコーディングしていく感じでしたがgoogleが&lt;a href=&#34;https://github.com/google/clasp&#34;&gt;clasp&lt;/a&gt;というツールを開発したおかげでローカル環境で開発、TypeScriptを変換してGASを書けるようになりました。&lt;br&gt;
これによりVSCodeでも簡単に開発可能になりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TypeScriptを知らない方へ&lt;/p&gt;
&lt;p&gt;TypeScriptはJavaScriptを静的型付をしてメンテナンス性を向上させた言語です。&lt;br&gt;
型推論がある程度されるのでエディタが対応していれば入力補完がいい感じになります。&lt;br&gt;
そしてVSCodeはTypeScriptの入力補完は高性能です。&lt;br&gt;
(VSCode自体, Electron + Node.js + TypeScriptで作成されています)&lt;/p&gt;
&lt;p&gt;このページではTypeScript(.ts)前提で進めますが、JavaScript(.js)でもプッシュできます。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;開発環境を構築する&#34;&gt;開発環境を構築する&lt;/h2&gt;
&lt;h3 id=&#34;1-nodejsをインストールする&#34;&gt;1. Node.jsをインストールする&lt;/h3&gt;
&lt;p&gt;npmを使うのでNode.jsを使います。&lt;br&gt;
LTS(推奨版)が無難です。この記事を書いたときは14.17.4でした&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nodejs.org/ja/&#34;&gt;https://nodejs.org/ja/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-typescripttslinstclaspをインストール&#34;&gt;2. TypeScript、TSLinst、claspをインストール&lt;/h3&gt;
&lt;p&gt;TypeScriptで使うこの２つをインストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm install -g typescript
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;npm install -g tslint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で、今回の要であるclaspをインストール
これにより、googleと通信可能になります&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm install -g @google/clasp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-google-apps-script-apiをオンにする&#34;&gt;3. Google Apps Script APIをオンにする&lt;/h3&gt;
&lt;p&gt;初期設定ではAPIは使えないようになっています。&lt;br&gt;
Googleにログインして以下のURLからAPIをオンに変更してください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://script.google.com/home/usersettings&#34;&gt;https://script.google.com/home/usersettings&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-ワークスペースを作成する&#34;&gt;4. ワークスペースを作成する。&lt;/h3&gt;
&lt;p&gt;ワークスペースとなるディレクトリを作成します。&lt;br&gt;
ここでは分かりやすくC直下にGASディレクトリを作成し、&lt;code&gt;C:\GAS\test1&lt;/code&gt;で開発したいと思います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; \
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mkdir&lt;/span&gt; GAS
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; GAS
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mkdir&lt;/span&gt; test1
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; test1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;作成できたら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm init --y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でpackage.jsonを作成します。
そのあと定義ファイルが入ったファイルを取得します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm i @types/google-apps-script --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでVSCode上でも入力補完が使えるようになります。&lt;/p&gt;
&lt;h3 id=&#34;5-claspを使っていろいろ弄ってみる&#34;&gt;5. claspを使っていろいろ弄ってみる&lt;/h3&gt;
&lt;p&gt;GASを弄るには最初にログインします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;clasp login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を実行するとブラウザが立ち上がり、アクセス許可を聞いてくるので許可します。&lt;/p&gt;
&lt;p&gt;次にプロジェクトを作成してみます。&lt;br&gt;
&amp;quot;Hello&amp;quot;はプロジェクト名になります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;clasp create --title &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt; --rootDir ./src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;すると以下のように聞いてくるので矢印キーで作成したいものを選びます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;? Create which script? (Use arrow keys)
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; standalone
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;  docs
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;  sheets
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;  slides
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;  forms
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;  webapp
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;  api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここではテストをしたいだけなのでstandaloneを選ぶことにします。&lt;/p&gt;
&lt;p&gt;作成されたか確認してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;clasp open
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を実行するとブラウザで作成したプロジェクトが開かれます。&lt;/p&gt;
&lt;h3 id=&#34;6-実際に書いてpush-pullしてみる&#34;&gt;6. 実際に書いてpush, pullしてみる&lt;/h3&gt;
&lt;p&gt;ここからはVSCodeを使って実際に書いてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;code .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このディレクトリをワークスペースとして開きます。
srcフォルダにHelloWorld.tsを作成し&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hello() {&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;をコピペして保存します。
このとき&lt;code&gt;log&lt;/code&gt;を選択すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;(method) GoogleAppsScript.Base.Logger.log(data: any): GoogleAppsScript.Base.Logger (+1 overload)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちゃんとGASのメソッドの説明が読み込めていることが分かります。もちろん補完もされます。&lt;/p&gt;
&lt;p&gt;これをプロジェクト側に反映したいと思います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;clasp push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を実行するとpushします。&lt;br&gt;
ブラウザでプロジェクトを確認するとHelloWorld.gsが作成されています&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Compiled using test1 1.0.0 (TypeScript 4.3.5)
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;逆にpullしたい場合は&lt;code&gt;clasp pull&lt;/code&gt;をするだけです。&lt;br&gt;
ブラウザ側で&lt;code&gt;こんにちは&lt;/code&gt;に変えて保存&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Compiled using test1 1.0.0 (TypeScript 4.3.5)
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;こんにちは&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pullすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;clasp pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;HelloWorld.js&lt;/code&gt;がローカルに作成されます。&lt;/p&gt;
&lt;p&gt;これでVSCodeで開発できるようになりました。&lt;br&gt;
自分もこれで本格的にスプレッドシートのスクリプトを作成していきたいと思います。&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>コマンド【code】後コマンドプロンプトを閉じたい</title>
      <link>https://sakuya712.github.io/post/vscode01/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/vscode01/</guid>
      <description>
        
          &lt;p&gt;VSCodeのコマンドcodeの話&lt;/p&gt;
&lt;h2 id=&#34;コマンドcode後コマンドプロンプトを閉じたい&#34;&gt;コマンド【code】後コマンドプロンプトを閉じたい&lt;/h2&gt;
&lt;p&gt;VSCodeにはコマンドプロンプトから呼び出せるように&lt;code&gt;code&lt;/code&gt;というコマンドが用意されています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;code .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と入力すれば現在のディレクトリをワークスペースとしてVSCodeを開けるので便利です。&lt;br&gt;
しかしこの方法、VSCodeが開いてもコマンドプロンプトは起動したままです。&lt;br&gt;
これは恐らくnanoやviみたいにCUIで操作する人が使うイメージを想定しているんだと思いますが、&lt;br&gt;
バッチファイルなどの何らかの処理をcmdで返してVSCodeを起動したいだけの場合はコマンドプロンプトが残るのは邪魔でしかありません。&lt;br&gt;
そこでVSCodeを起動したらコマンドプロンプトが閉じるようなコマンドを追加したいと思います。&lt;/p&gt;
&lt;h2 id=&#34;解決方法&#34;&gt;解決方法&lt;/h2&gt;
&lt;p&gt;調べてみると同様のことが&lt;a href=&#34;https://github.com/Microsoft/vscode/issues/6608&#34;&gt;issue&lt;/a&gt;にありました。&lt;br&gt;
要約すると&lt;br&gt;
windowsの場合特に弄ってなければcodeを実行させている実態は以下の場所にあります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;%LOCALAPPDATA%\Programs\Microsoft VS Code\bin
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;フルパスは
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;C:\Users\[ユーザー名]\AppData\Local\Programs\Microsoft VS Code\bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そこにある&lt;code&gt;code.cmd&lt;/code&gt;をコピーして適当にリネームします。&lt;br&gt;
ここでは&lt;code&gt;codeExit.cmd&lt;/code&gt;とします。&lt;br&gt;
これをエディタなどで開いて5行目を修正する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%~dp0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;..\Code.exe&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%~dp0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;..\resources\app\out\cli.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%*&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;を
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%~dp0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;..\Code.exe&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%~dp0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;..\resources\app\out\cli.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%*&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;に変更する
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで完了&lt;br&gt;
試しに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;codeExit .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;というバッチを作成して実行するとVSCodeが開き、コマンドプロンプトは閉じてくれました。&lt;/p&gt;
&lt;p&gt;念のため修正したところを解説すると&lt;br&gt;
どうやら通常のcodeは(省略されていますが)callで呼んでいるみたいです。&lt;br&gt;
callは呼んだルーチンが終了するのを待つのでVSCodeが閉じられるまでコマンドプロンプトが開きっぱなしということが起こります。&lt;br&gt;
しかし、startで呼ぶと新しいプロセスとして実行されるため、VScodeを開く命令をしたあと最終行に到達し、コマンドプロンプトが閉じるということらしいです。&lt;br&gt;
なお&amp;quot;&amp;quot;の空文字は新しいプロセスを実行するときのウィンドウ名です。なので特に意味はありません。(但し、無くすことはできない)&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
