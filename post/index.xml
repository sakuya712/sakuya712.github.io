<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on saku note</title>
    <link>https://sakuya712.github.io/post/</link>
    <description>Recent content in Posts on saku note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2020–2021, sakuya712.</copyright>
    <lastBuildDate>Thu, 06 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sakuya712.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VBA メモ</title>
      <link>https://sakuya712.github.io/post/vbamemo/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/vbamemo/</guid>
      <description>
        
          &lt;p&gt;VBAに関するちょっとしたメモ&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#formula%E3%81%AE%E8%A8%AD%E5%AE%9A%E6%99%82%E3%82%92%E3%81%A4%E3%81%91%E3%82%8C%E3%81%B0%E7%9B%B8%E5%AF%BE%E5%8F%82%E7%85%A7%E3%81%A7%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%82%93%E3%81%A7%E3%81%8F%E3%82%8C%E3%82%8B&#34;&gt;Formulaの設定時、=をつければ相対参照で書き込んでくれる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%A5%E5%8A%9B%E8%A6%8F%E5%88%B6%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E3%81%84%E3%81%8B%E3%81%AA%E3%81%84%E3%81%A8%E3%81%8D&#34;&gt;入力規制がうまくいかないとき&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%80%E5%88%9D%E3%81%ABdelete%E3%81%97%E3%82%88%E3%81%86&#34;&gt;最初にDeleteしよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%82%E7%85%A7%E5%BD%A2%E5%BC%8F%E3%81%8C%E5%90%88%E3%81%A3%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84&#34;&gt;参照形式が合っていない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sortorientation%E3%81%AFxlsortorientation%E5%88%97%E6%8C%99%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84&#34;&gt;Sort.OrientationはXlSortOrientation列挙を使わない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h3 id=&#34;formulaの設定時をつければ相対参照で書き込んでくれる&#34;&gt;Formulaの設定時、=をつければ相対参照で書き込んでくれる&lt;/h3&gt;
&lt;p&gt;A列は、B列の同じ行を参照するという処理をしたい場合&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1:A100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Formula&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;=B1&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と書けば、 セルA1は&amp;quot;=B1&amp;quot;、セルA2は&amp;quot;=B2&amp;quot;と処理してくれる。&lt;br&gt;
逆に絶対参照したい場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1:A100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Formula&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;=$B$1&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば全部B1を参照してくれる。&lt;br&gt;
これは入力規制などでセル範囲を指定する場合も同じで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;With&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1:A100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Validation&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Delete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlValidateList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Formula1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;=B1:B3&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;With&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と指定してもちゃんと相対的に入力規制を設定してくれる&lt;br&gt;
またこれらは【R1C1参照形式】を使用するとしているとちゃんと処理も変わる&lt;br&gt;
渡すのはただの文字列だが、思ってた以上に賢く処理しているみたいです。&lt;/p&gt;
&lt;h3 id=&#34;入力規制がうまくいかないとき&#34;&gt;入力規制がうまくいかないとき&lt;/h3&gt;
&lt;h4 id=&#34;最初にdeleteしよう&#34;&gt;最初にDeleteしよう&lt;/h4&gt;
&lt;p&gt;既に入力規制があるところにAddしようとすると&lt;code&gt;「1004：アプリケーション定義またはオブジェクト定義のエラーです」&lt;/code&gt;がでます。&lt;br&gt;
逆に入力規制がない状態でDeleteしても特になにも言ってこないので、とりあえず最初はDeleteしとけば問題ないと思います&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;With&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Validation&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Delete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;&amp;#39;入力規制内容
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;With&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;参照形式が合っていない&#34;&gt;参照形式が合っていない&lt;/h4&gt;
&lt;p&gt;通常の設定では&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;With&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Validation&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Delete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlValidateList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Formula1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;=B1:B3&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;With&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は設定できるのですが、【R1C1参照形式】に設定している場合、参照できずにエラーを出してしまいます。&lt;/p&gt;
&lt;p&gt;そこで&lt;a href=&#34;https://docs.microsoft.com/ja-jp/office/vba/api/excel.application.convertformula&#34;&gt;Application.ConvertFormulaメソッド&lt;/a&gt;を使って置換を行います。&lt;br&gt;
さらに現在の設定を&lt;a href=&#34;https://docs.microsoft.com/ja-jp/office/vba/api/excel.application.referencestyle&#34;&gt;Application.ReferenceStyleプロパティ&lt;/a&gt;で取得できます。&lt;/p&gt;
&lt;p&gt;ですので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConvertFormula&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;参照内容&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;←&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;の参照の形式&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReferenceStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすればどちらでも対応できるマクロになります。&lt;/p&gt;
&lt;p&gt;&amp;lt;例&amp;gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;With&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Validation&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Delete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlValidateList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; _
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;Formula1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConvertFormula&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; _
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;                    &lt;span class=&#34;s&#34;&gt;&amp;#34;=B1:B3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; _
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;                    &lt;span class=&#34;n&#34;&gt;xlA1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; _
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;                    &lt;span class=&#34;n&#34;&gt;Application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReferenceStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;With&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sortorientationはxlsortorientation列挙を使わない&#34;&gt;Sort.OrientationはXlSortOrientation列挙を使わない&lt;/h3&gt;
&lt;p&gt;Sort.Orientationはソートを行か列かの設定を行うプロパティである。&lt;br&gt;
この引数はXlSortOrientationを指定しているが、この列挙の変数名がややこしいということで使われていません。→&lt;a href=&#34;https://docs.microsoft.com/ja-jp/office/vba/api/excel.sort&#34;&gt;Sortオブジェクトのドキュメントにも使われていない&lt;/a&gt;&lt;br&gt;
そこで代わりに&lt;code&gt;xlTopToBottom&lt;/code&gt;(行方向の並び替え)、&lt;code&gt;xlLeftToRight&lt;/code&gt;(列方向の並び替え)を使います。この列挙はエクセルのConstantsにあります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlTopToBottom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;恐らく後付けでこの定数を作成したんだとおもいます。(新しい列挙型作ってそれを引数にすればいいのに…)&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>Giteaを使ってローカルでGitHubライクサーバーを作成する</title>
      <link>https://sakuya712.github.io/post/gitea/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/gitea/</guid>
      <description>
        
          &lt;p&gt;GitHubには上げたくなけど専用サーバーをつくるのしんどい方は必見&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AF%BE%E8%B1%A1%E8%80%85&#34;&gt;対象者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%9C%E3%82%8B%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91&#34;&gt;作るきっかけ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gitea%E3%81%A8%E3%81%AF&#34;&gt;Giteaとは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gitea%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B&#34;&gt;Giteaを使って構築してみる&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E5%89%8D%E6%BA%96%E5%82%99&#34;&gt;1. 前準備&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-gitea%E3%82%92dl%E3%81%99%E3%82%8B&#34;&gt;2. GiteaをDLする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-gitea%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B&#34;&gt;3. Giteaを起動してみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E3%82%92%E8%A1%8C%E3%81%86&#34;&gt;4. 初期設定を行う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-%E8%87%AA%E5%8B%95%E7%9A%84%E3%81%AB%E8%B5%B7%E5%8B%95%E3%81%95%E3%81%9B%E3%82%8B&#34;&gt;5. 自動的に起動させる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB&#34;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h2 id=&#34;対象者&#34;&gt;対象者&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;会社のデータなのでGitHubに上げることができない&lt;/li&gt;
&lt;li&gt;1人もしくは小規模でGitを使用する&lt;/li&gt;
&lt;li&gt;専用サーバー機を用意してまで大それたことはしたくない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;作るきっかけ&#34;&gt;作るきっかけ&lt;/h2&gt;
&lt;p&gt;現在のGitHubではプライベートリポジトリも無料でできますが、それでも社内ツールみないなものは上げたくないものです。&lt;br&gt;
一応ローカルにリモートリポジトリを作成自体はできるのですが、単純にリポジトリがあるだけなのでGitHubみたいにイシューやプルリクのような便利なものはありません。&lt;br&gt;
これを実現するにはGitLabみたいなのを使って専用サーバーをつくるできるのですが、それはしんどい。そんな大それたことはしたくない。。。&lt;br&gt;
どうにか簡単にできないものかと調べていたところGiteaというものたどりついた&lt;br&gt;
で、少しいじってみたか滅茶苦茶簡単に作れたのでぜひ広まって欲しいと思い記事にしました。&lt;/p&gt;
&lt;h2 id=&#34;giteaとは&#34;&gt;Giteaとは&lt;/h2&gt;
&lt;p&gt;特徴として&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gitHubライクなサイトを作成できる→&lt;a href=&#34;https://try.gitea.io/&#34;&gt;サンプル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ローカルサーバー内で完結できる&lt;/li&gt;
&lt;li&gt;SQLite3に対応しているので手軽&lt;/li&gt;
&lt;li&gt;軽い。ラズパイでも余裕らしい。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;があります。&lt;/p&gt;
&lt;p&gt;恐らくこの手のもので一番有名なのはGitLabですが、あれはアカウントが必要でスペックも結構必要な感じで自分もあきらめていましたが、&lt;br&gt;
これなら誰かがホストになればわざわざ専用サーバーを用意しなくてもよさそうな感じです。&lt;br&gt;
手軽にできるので1人Gitしてる方にもオススメです&lt;/p&gt;
&lt;h2 id=&#34;giteaを使って構築してみる&#34;&gt;Giteaを使って構築してみる&lt;/h2&gt;
&lt;h3 id=&#34;1-前準備&#34;&gt;1. 前準備&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Gitのインストール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.eonet.jp/connect/net/multi_bbr/eo-rt100/quick/ip_static_win10.html&#34;&gt;IPアドレスを固定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;はここでは解説しませんが、各自やっておいてください。&lt;/p&gt;
&lt;h3 id=&#34;2-giteaをdlする&#34;&gt;2. GiteaをDLする&lt;/h3&gt;
&lt;p&gt;本題のGiteaほうですが、&lt;a href=&#34;https://dl.gitea.io/gitea&#34;&gt;ここから&lt;/a&gt;DLしてください。&lt;br&gt;
この記事を書いているときは1.13.5がCurrent Releaseだったのでこれの&lt;code&gt;gitea-1.13.5-windows-4.0-amd64.exe&lt;/code&gt;を選びました。&lt;br&gt;
DLできたらDBを保存するディレクトリに移動させてください。&lt;br&gt;
ここではわかりやすく&lt;code&gt;C:\gitea&lt;/code&gt;として説明します。&lt;br&gt;
またファイル名が長いので&lt;code&gt;gitea.exe &lt;/code&gt;にリネームしておきます&lt;/p&gt;
&lt;h3 id=&#34;3-giteaを起動してみる&#34;&gt;3. Giteaを起動してみる&lt;/h3&gt;
&lt;p&gt;といっても以下のコマンドを実行するだけです。&lt;br&gt;
コマンドプロンプト&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; C:\gitea
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;gitea.exe ./gitea web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これだけでローカルサーバーに作成されています。&lt;br&gt;
&lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt;にアクセスしてます。&lt;/p&gt;
&lt;p&gt;たったこれだけでできてしました。簡単すぎる…&lt;/p&gt;
&lt;h3 id=&#34;4-初期設定を行う&#34;&gt;4. 初期設定を行う&lt;/h3&gt;
&lt;p&gt;右上の登録ボタンを押すと初期設定が行えます。&lt;br&gt;
データベースはお手軽に扱える&lt;code&gt;SQLite3&lt;/code&gt;を選択、サイトタイトルやリポジトリパスはお好みで&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/gitea/001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;複数のPCで使うのであれば&lt;code&gt;SSHサーバーのドメイン&lt;/code&gt;はコンピューター名&lt;br&gt;
&lt;code&gt;GiteaのベースURL&lt;/code&gt;は&lt;code&gt;http://&amp;lt;コンピューター名&amp;gt;:3000/&lt;/code&gt;にしておくのが無難です。&lt;br&gt;
コンピューター名は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hostname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でわかります。&lt;/p&gt;
&lt;p&gt;オプション設定ですが、ローカルで使うのであればメール設定とサーバーと外部サービスの設定の項目は飛ばしていいでしょう。&lt;br&gt;
最後に管理者アカウントの設定でユーザー名、パスワード、メアドを設定してください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;giteaをインストール&lt;/code&gt;ボタンを押します。
先ほど設定した管理者アカウントでログインできたら初期設定完了です。&lt;/p&gt;
&lt;p&gt;あとはGitHubと同じように右上にある＋ボタンでリポジトリ作成してみてテストしてみてください。&lt;br&gt;
GitHubと同じ感覚でクローン、プッシュ、プルリクなどができます。&lt;br&gt;
それと他のPCからアクセスできるかも試してください。&lt;br&gt;
できない場合は大抵はファイアウォールのせいです。&lt;code&gt;gitea.exe&lt;/code&gt;のローカルもしくはドメイン間だけ通信許可を出せば他のPCでも見れるようになると思います。&lt;br&gt;
ローカルで使うならHTTPS化もしません。ローカルサーバに入られたり、ホストのPCになにか仕掛けられないかぎり問題なし。&lt;/p&gt;
&lt;p&gt;なお、Gitのプロキシ設定で対象を指定せずに使うとGiteaのリポジトリにアクセスできません。&lt;br&gt;
.gitconfigで特定のURLのみプロキシを通すようにします。&lt;/p&gt;
&lt;p&gt;GitHubでのみプロキシを使う場合は以下のように書きます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;[http &amp;#34;https://github.com/&amp;#34;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;プロキシURL&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;[https &amp;#34;https://github.com/&amp;#34;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;プロキシURL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-自動的に起動させる&#34;&gt;5. 自動的に起動させる&lt;/h3&gt;
&lt;p&gt;環境はできたけど毎回パソコン起動するたびに&lt;code&gt;./gitea web&lt;/code&gt;とするのは面倒なので起動時に自動的に開始されるようにします。&lt;/p&gt;
&lt;p&gt;といっても&lt;a href=&#34;https://docs.gitea.io/en-us/windows-service/&#34;&gt;公式&lt;/a&gt;に記載しているとおりにやるだけです。&lt;/p&gt;
&lt;p&gt;まず、&lt;code&gt;C:\gitea\custom\conf\app.ini&lt;/code&gt;にあるファイルを開き&lt;code&gt;RUN_USER =&lt;/code&gt;の値をコンピュータ名にします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;RUN_USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;コンピュータ名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次にコマンドプロンプトを&lt;strong&gt;管理者&lt;/strong&gt;で起動します
ここで、gitea.exeがあるパスとapp.iniがあるパスを指定します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sc.exe create Gitea start= auto binPath= &lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;&lt;/span&gt;C:\gitea\gitea.exe\&lt;span class=&#34;s2&#34;&gt;&amp;#34; web --config \&amp;#34;&lt;/span&gt;C:\gitea\custom\conf\app.ini&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem [SC] CreateService SUCCESS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でSuccessが出たら登録完了です。
早速起動してみましょう。&lt;br&gt;
「Windows」キーを押しながら「R」キーで「ファイル名を指定して実行」→&lt;code&gt;services.msc&lt;/code&gt;の入力するとサービス一覧がでます。&lt;br&gt;
そこから先ほど登録したGiteaの項目があるのでクリックして&lt;code&gt;開始&lt;/code&gt;ボタンを押すと起動します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/gitea/002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;これでいちいち&lt;code&gt;./gitea web&lt;/code&gt;しなくても見れるようになりました。&lt;/p&gt;
&lt;p&gt;ちなみに登録削除する場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sc.exe delete Gitea 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;ローカルでGitHubと同じ感覚でリポジトリが見れるのはやっぱりいいですね、しかもこっちはちゃっかり日本語化されてるし。&lt;br&gt;
そしてこんなのが気軽に作れてしまう。最近は本当に便利な世の中だなと思う。&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>Git チートシート</title>
      <link>https://sakuya712.github.io/post/gitcheatsheet/</link>
      <pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/gitcheatsheet/</guid>
      <description>
        
          &lt;p&gt;たまにしか使わないやつのメモ&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%94%E3%81%A8clone%E3%81%99%E3%82%8B&#34;&gt;サブモジュールごとCloneする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E4%B8%80%E9%83%A8%E3%81%A0%E3%81%91%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B&#34;&gt;サブモジュールの一部だけを利用する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%9C%80%E6%96%B0%E3%81%AB%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B&#34;&gt;サブモジュールの最新に更新する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B&#34;&gt;リモートリポジトリ(フォルダ)を作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E5%A4%89%E6%8F%9B%E3%82%92%E7%84%A1%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E8%A8%AD%E5%AE%9A&#34;&gt;改行コード変換を無効にする(ローカル設定)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%81%8E%E5%8E%BB%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%8F%96%E3%82%8A%E5%87%BA%E3%81%99&#34;&gt;過去のファイルを取り出す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h2 id=&#34;サブモジュールごとcloneする&#34;&gt;サブモジュールごとCloneする&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;--recursiveをつけるとサブモジュールも一緒にCloneできる&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone --recursive [リポジトリ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;サブモジュールの一部だけを利用する&#34;&gt;サブモジュールの一部だけを利用する&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sparse checkoutを使って一部しかみないようにする&lt;/li&gt;
&lt;li&gt;submoduleするときはブランチを指定する方がいい。dll参照のときなんかはmasterでいいと思う&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem サブモジュール追加&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;git submodule add -b [ブランチ名] [参照リポジトリ]
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem sparse checkoutをサブモジュールで適用する&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;git -C [参照フォルダ] config core.sparsecheckout true
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem 設定を.git内に書き込む&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; [残したいファイル、ディレクトリ] &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; .git/modules/[参照フォルダ]/info/sparse-checkout 
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem ツリー情報を再読み込みする&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;git -C [参照フォルダ] read-tree -mu HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;サブモジュールの最新に更新する&#34;&gt;サブモジュールの最新に更新する&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git submodule foreach git pull origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;リモートリポジトリフォルダを作成する&#34;&gt;リモートリポジトリ(フォルダ)を作成する&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GitHubなど使わず、共有フォルダなどにリモートリポジトリを作成したい場合は、--bare --sharedをつけると作成できる&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git init  [フォルダ名].git --bare --shared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;改行コード変換を無効にするローカル設定&#34;&gt;改行コード変換を無効にする(ローカル設定)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;このリポジトリだけ改行コード変換を無効にしたい場合&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git config --local core.autocrlf false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;過去のファイルを取り出す&#34;&gt;過去のファイルを取り出す&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全部取り出す場合はarchiveを使う&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git archive [コミットIDなど] -o [ファイル名].zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;差分だけ出したい場合はdiffを使う&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git diff --name-only --diff-filter=d [コミットIDなど1] [コミットIDなど2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>10分で静的サイトを作成する【Hugo&#43;GitHub Pages】</title>
      <link>https://sakuya712.github.io/post/hugogithubpages/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/hugogithubpages/</guid>
      <description>
        
          &lt;p&gt;手軽にサイトが作れる。しかも無料&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hugo%E3%81%A8%E3%81%AF&#34;&gt;Hugoとは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#github-pages%E3%81%A8%E3%81%AF&#34;&gt;GitHub Pagesとは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%9F%E9%9A%9B%E3%81%AB%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B&#34;&gt;実際に作成してみる&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-hugo%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&#34;&gt;1. Hugoをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-github%E3%81%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B&#34;&gt;2. GitHubにリポジトリを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E5%88%9D%E6%9C%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92github%E3%81%AB%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B&#34;&gt;3. 初期ファイルをGitHubにプッシュする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E3%83%86%E3%83%BC%E3%83%9E%E3%82%92%E9%81%A9%E7%94%A8%E3%81%99%E3%82%8B&#34;&gt;4. テーマを適用する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B&#34;&gt;5. デプロイする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B&#34;&gt;6. カスタマイズする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h2 id=&#34;hugoとは&#34;&gt;Hugoとは&lt;/h2&gt;
&lt;p&gt;Hugoは静的サイトを簡単に自動生成してくれるツールである。&lt;br&gt;
こいつのいいところは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdownだけで記事が書ける(HTMLの知識不要)&lt;/li&gt;
&lt;li&gt;Goを使っているので生成が滅茶苦茶早い →&lt;a href=&#34;https://forestry.io/blog/hugo-vs-jekyll-benchmark/&#34;&gt;Jekyllとの比較&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;テーマが公開されており、簡単にそれらを試すことができる&lt;/li&gt;
&lt;li&gt;無料&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;とくに自分的には&lt;code&gt;Markdownだけで記事が書ける&lt;/code&gt;点はすごく気に入っています。&lt;br&gt;
自分はHTMLやCSSのフロント側の知識は皆無なので1から作成することはできないし、従来からあるブログ形式やワードプレスだと、管理画面で記事を書く感じになるので気軽に記事を書けないという欠点がありました。&lt;br&gt;
しかし、このツールだとMarkdownでいいのでエディタさえあればとりあえず記事を書けるという気軽さがあります。ソース管理はGitHubで行います。静的サイトならこれで十分ですね。&lt;/p&gt;
&lt;h2 id=&#34;github-pagesとは&#34;&gt;GitHub Pagesとは&lt;/h2&gt;
&lt;p&gt;GitHub PagesとはGitHubが提供している静的サイトのホスティングサービスです。&lt;br&gt;
このGitHub Pagesには2種類あり、ユーザ(組織アカウント)用のページとプロジェクト用のページがあります。&lt;/p&gt;
&lt;p&gt;ユーザ用は&lt;br&gt;
https://[USERNAME].github.io/&lt;br&gt;
のようなURLになり、&lt;code&gt;[USERNAME].github.io&lt;/code&gt;というリポジトリを作成すると自動的にページを作成してくれます。&lt;br&gt;
※[USERNAME]は自分のID名が入ります&lt;/p&gt;
&lt;p&gt;プロジェクト用は&lt;br&gt;
https://[USERNAME].github.io/[リポジトリ名]/&lt;br&gt;
のようなURLになり、プロジェクト名は自由でリポジトリの数だけ作成できます。&lt;/p&gt;
&lt;p&gt;今回は、ユーザ用のページで作成します。&lt;br&gt;
理由としては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プロジェクト用は課金しないと、ソースコードが丸見え&lt;/li&gt;
&lt;li&gt;[リポジトリ名]が入るため階層が深くなり、設定を弄る必要がある。(ドメイン取得すれば解決できるが)&lt;br&gt;
があります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ユーザ用でも&lt;code&gt;[USERNAME].github.io&lt;/code&gt;のリポジトリ自体は丸見えなのですが、ここにはHugoで自動生成されたものだけを置き、実際のデータ管理はプライベートリポジトリで行うことができます。&lt;br&gt;
ファンサイトみたいなやつはプロジェクト用でもいいかもしれませんが、ブログとかはやっぱりプライベートにしたいですよね&lt;/p&gt;
&lt;h2 id=&#34;実際に作成してみる&#34;&gt;実際に作成してみる&lt;/h2&gt;
&lt;p&gt;以下、Windonws10の環境で行います。&lt;/p&gt;
&lt;h3 id=&#34;1-hugoをインストール&#34;&gt;1. Hugoをインストール&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;公式&lt;/a&gt;から最新の&lt;code&gt;hugo_0.XX.0_Windows-64bit.zip&lt;/code&gt;をDLして解凍、適当な場所に保存します。&lt;br&gt;
そしてそのフォルダの&lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/1805/11/news035.html&#34;&gt;Pathを通す&lt;/a&gt;だけです。&lt;/p&gt;
&lt;p&gt;コマンドプロンプトを起動して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でバージョンが返ってきたらインストール完了です。&lt;/p&gt;
&lt;h3 id=&#34;2-githubにリポジトリを作成する&#34;&gt;2. GitHubにリポジトリを作成する&lt;/h3&gt;
&lt;p&gt;まずGitHubに二つリポジトリを作成します&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ソースコードを管理するリポジトリ&lt;/li&gt;
&lt;li&gt;実際に公開するリポジトリ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まずソースコードを[管理するリポジトリ]を作成します。&lt;br&gt;
このリポジトリ名はなんでもいいです。&lt;br&gt;
プライベートでも問題ありません。
自分の例では以下のように作成しています。(プライベートなのでみれないと思いますが)&lt;br&gt;
&lt;a href=&#34;https://github.com/sakuya712/sakunote&#34;&gt;https://github.com/sakuya712/sakunote&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;次に実際に[サイトとして公開するリポジトリ]を作成します。&lt;br&gt;
このリポジトリは先ほどのとおり&lt;code&gt;[USERNAME].github.io&lt;/code&gt;というリポジトリを作成します。&lt;br&gt;
こちらをプライベートにしたい場合は課金が必要です。&lt;br&gt;
それと、リポジトリ作成時にREADMEを作成するようにしてください。&lt;br&gt;
(あとの工程で空っぽのリポジトリだとエラーになるため)&lt;br&gt;
自分の場合は以下のようになっています。&lt;br&gt;
&lt;a href=&#34;https://github.com/sakuya712/sakuya712.github.io&#34;&gt;https://github.com/sakuya712/sakuya712.github.io&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-初期ファイルをgithubにプッシュする&#34;&gt;3. 初期ファイルをGitHubにプッシュする&lt;/h3&gt;
&lt;p&gt;まず適当にコマンドで作業ファイルに移動して以下のコマンドを打つ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hugo new site myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでHugoの初期ファイルが生成されます。&lt;/p&gt;
&lt;p&gt;生成したディレクトリに移動して、リポジトリを作成、ソースコード管理のリモートリポジトリをセットします。&lt;br&gt;
自分の場合では、&lt;code&gt;git remote add origin git@github.com:sakuya712/sakunote.git&lt;/code&gt;です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; myblog
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;git init
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;git remote add origin [ソースコード管理のリポジトリ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;リモートリポジトリをセットできたら初期ファイルをコミットして、プッシュしてください。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git add -A
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次にサイトとして公開するリポジトリを以下のようにして参照関連つけします。&lt;br&gt;
自分の場合は&lt;code&gt;git@github.com:sakuya712/sakuya712.github.io.git&lt;/code&gt;です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git submodule add [サイトとして公開するリポジトリ] public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(※このとき、リポジトリ作成時のREADMEがないとエラーになる)&lt;br&gt;
ここで最後の&lt;code&gt;public&lt;/code&gt;を忘れないようにしてください。このフォルダにはHugoで生成されたファイルが入ります。&lt;/p&gt;
&lt;p&gt;参照できたら&lt;code&gt;public&lt;/code&gt;フォルダに移動し、リポジトリを作成時のREADMEはもう要らないので削除。そしてコミットしてプッシュします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; public
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;git rm README.md
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;git add -A
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;set myPages submodule&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;git push origin master
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; ..\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでリモートとローカルの関連付けができました。&lt;/p&gt;
&lt;h3 id=&#34;4-テーマを適用する&#34;&gt;4. テーマを適用する&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;公式サイト&lt;/a&gt;から使いたいテーマを探します。&lt;br&gt;
自分は&lt;a href=&#34;https://themes.gohugo.io/hugo-clarity/&#34;&gt;Clarity&lt;/a&gt;というものを使いました。&lt;br&gt;
殆どのテーマではそこからGitHubのページに飛べるので、そのリポジトリを関連付けをします。&lt;br&gt;
自分の場合は、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git submodule add https://github.com/chipzoller/hugo-clarity themes/hugo-clarity
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;です。
大抵のテーマにはサンプルデータが用意されているので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;robocopy /e /is .\themes\hugo-clarity\exampleSite\ .\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でサンプルデータをコピーしてください&lt;/p&gt;
&lt;p&gt;このサンプルから最低限の変更が必要なのは&lt;code&gt;config.toml&lt;/code&gt;の&lt;code&gt;baseurl&lt;/code&gt;を自分のURLに変更することです。 &lt;br&gt;
自分の場合は以下のようにします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;baseurl&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://sakuya712.github.io&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;テーマが適用されたかのテスト方法として&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で、ローカルサーバーを立てれます。&lt;br&gt;
&lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;にアクセスして、テーマが適用さえていたら成功です。&lt;br&gt;
ローカルサーバーを閉じるときは[Ctrl+C]です&lt;/p&gt;
&lt;h3 id=&#34;5-デプロイする&#34;&gt;5. デプロイする&lt;/h3&gt;
&lt;p&gt;テーマが正常に適用できていると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と打つことで&lt;code&gt;public&lt;/code&gt;フォルダに実際にデプロイするHTMLなどが生成されます。&lt;/p&gt;
&lt;p&gt;毎回デプロイの作業は面倒なのでバッチファイルを作成します。&lt;br&gt;
このリポジトリは生成されたものをただアップしていくだけなのでコメントやブランチは適当です。&lt;br&gt;
Deploy.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;rem hugoで生成されたファイルをコミットしてgithub.ioにプッシュする&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;hugo
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%~dp0&lt;/span&gt;public
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;git add -A
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time_tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%time: =0%&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%date:/=%%time_tmp:~0,2%%time_tmp:~3,2%%time_tmp:~6,2%&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;git commit -m &lt;span class=&#34;nv&#34;&gt;%now%&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;9&lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このバッチファイルを含めて管理するリポジトリにプッシュします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git add -A
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;template commit&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そして、先ほど作ったDeploy.batを走らせるとデプロイ完了。&lt;br&gt;
しばらくして、&lt;code&gt;https://[USERNAME].github.io/&lt;/code&gt;にアクセスするとページができています。&lt;/p&gt;
&lt;h3 id=&#34;6-カスタマイズする&#34;&gt;6. カスタマイズする&lt;/h3&gt;
&lt;p&gt;あとは、テーマの設定や素材の変更、サンプル記事を消して、自分の記事を追加するなどしてカスタマイズしてください。&lt;br&gt;
ファイル管理は、管理するリポジトリで自由におこなってください。&lt;br&gt;
サイトを更新したい場合は、Deploy.batを押すだけです。&lt;/p&gt;
&lt;p&gt;お疲れ様でした。&lt;/p&gt;
&lt;p&gt;次回は具体的なカスタマイズ方法を解説していきたい&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>Hyper-Vで簡単LAN内ファイル共有ファイル構築</title>
      <link>https://sakuya712.github.io/post/hypervshareserver/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/hypervshareserver/</guid>
      <description>
        
          &lt;p&gt;Windowsの共有フォルダとはおさらば&lt;/p&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=1 depthTo=6 orderedList=false} --&gt;
&lt;!-- code_chunk_output --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%9C%E3%82%8B%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91&#34;&gt;作るきっかけ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%92%B0%E5%A2%83&#34;&gt;環境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hyper-v%E3%81%AE%E8%A8%AD%E5%AE%9A&#34;&gt;Hyper-Vの設定&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hyper-v%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B&#34;&gt;Hyper-Vを有効にする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#os%E3%82%92%E5%85%A5%E6%89%8B%E3%81%99%E3%82%8B&#34;&gt;OSを入手する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hyper-v%E3%81%A7%E4%BB%AE%E6%83%B3%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B&#34;&gt;Hyper-Vで仮想環境を作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#os%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B&#34;&gt;OSをインストールする&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%AE%E6%83%B3%E7%92%B0%E5%A2%83os%E8%A8%AD%E5%AE%9A&#34;&gt;仮想環境OS設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8E%A5%E7%B6%9A%E7%A2%BA%E8%AA%8D&#34;&gt;接続確認&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E6%96%B9%E6%B3%95&#34;&gt;バックアップ方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /code_chunk_output --&gt;
&lt;h2 id=&#34;作るきっかけ&#34;&gt;作るきっかけ&lt;/h2&gt;
&lt;p&gt;いままではwindowsに標準搭載の共有フォルダ機能をつかっていたのだが、これがなにかの拍子で接続できなくなることがあった。&lt;br&gt;
以前はwindowsのアプデで設定が変わったのが原因だった。今回はルーターを変えた際に接続できなくってしまった。&lt;br&gt;
恐らく前の設定を持ち続けているのが原因だろうが、対処法がよくわからない。&lt;br&gt;
Windowsの共有システムはなにかと設定が多くてスマホやiPadとかでも接続が上手くいかない場合もあった。&lt;br&gt;
なので、いっそのこと共有するようなものは仮想環境の方に全部ぶち込もうという風結論ずけた。&lt;br&gt;
バックアップもエクスポートするだけでできるし。&lt;/p&gt;
&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows10 Pro build 1909 (Homeではできません)&lt;/li&gt;
&lt;li&gt;Intel Core i7 8700K&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hyper-vの設定&#34;&gt;Hyper-Vの設定&lt;/h2&gt;
&lt;h4 id=&#34;hyper-vを有効にする&#34;&gt;Hyper-Vを有効にする&lt;/h4&gt;
&lt;p&gt;初期状態ではHyper-Vは有効になっていません。&lt;br&gt;
前準備として、UEFI/BIOS画面を開いてIntel VT／AMD-Vが有効化されているか確認する&lt;br&gt;
そのあとコントロールパネルからHyper-Vを有効にする&lt;/p&gt;
&lt;p&gt;→&lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/1806/25/news026.html&#34;&gt;参考サイト&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有効化して、再起動すればコントロールパネルの管理ツールに&lt;code&gt;Hyper-V マネージャー&lt;/code&gt;が追加されている。&lt;/p&gt;
&lt;h4 id=&#34;osを入手する&#34;&gt;OSを入手する&lt;/h4&gt;
&lt;p&gt;なんでもいいのですが今回は容量軽い、メモリ使用量が少ないLinux Mint Mate版を使用します。&lt;br&gt;
→&lt;a href=&#34;https://www.linuxmint.com/download.php&#34;&gt;ダウンロード&lt;/a&gt;&lt;br&gt;
自分の環境ではなぜか画面がおかしくなっていたので&lt;a href=&#34;https://www.linuxmint.com/edition.php?id=276&#34;&gt;19.3版&lt;/a&gt;をダウンロードしました。&lt;/p&gt;
&lt;h4 id=&#34;hyper-vで仮想環境を作成する&#34;&gt;Hyper-Vで仮想環境を作成する&lt;/h4&gt;
&lt;p&gt;最初はネットワークの設定&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最初に仮想スイッチマネージャーを開く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新しい仮想ネットワークの作成で、外部を選択で作成、適当に名前をつけてOKをする&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;これは二回目以降はやる必要はありません。&lt;/p&gt;
&lt;p&gt;次に仮想マシンを作成します。 新規→仮想マシンを選択&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;適当に名前をつけて保存する場所を選択&lt;/li&gt;
&lt;li&gt;世代は第一世代を選択&lt;/li&gt;
&lt;li&gt;メモリは2GBにしてみた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ネットワークは先ほど作成したネットを選ぶ&lt;/li&gt;
&lt;li&gt;ストレージは可変にするので後で設定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;とりあえず作成ウィザードは完了です。&lt;br&gt;
次に先ほど飛ばしたストレージを作成します。&lt;br&gt;
仮想マシン一覧から右クリックで設定を選んで、IDEコントローラを選ぶ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ハードドライブを選んだら追加を押す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;フォーマットはVHDX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容量可変&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ストレージの保存場所&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ここでは容量を50GBとしてますが、実際のストレージのギリギリ限界まで作ってもいいと思います。可変にしているので最初からこのストレージを要求されません。&lt;/li&gt;
&lt;li&gt;ストレージ容量は後で変えることはできますが、パーテーションの再設定をしないといけないです。→&lt;a href=&#34;https://qiita.com/nakat-t/items/87d0ae049a5e0b57e469&#34;&gt;仮想HDDの容量を増やす方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最後にチェックポイントは残ると厄介なので、&lt;code&gt;自動チェックポイントを使用する&lt;/code&gt;を外しておきます。(バックアップはエクスポートでやる)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hyper-V側の設定は終わりです。&lt;/p&gt;
&lt;h2 id=&#34;osをインストールする&#34;&gt;OSをインストールする&lt;/h2&gt;
&lt;p&gt;仮想マシン一覧から作成したマシンをダブルクリック新しいウインドウが表示されます。&lt;br&gt;
そこでメディア→DVDドライブ→ディスクの挿入でDLしておいたLinux mintのイメージファイルを選択します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;そのあと起動ボタンを押すとLinux mintが立ち上がります。&lt;br&gt;
デスクトップが表示されたら成功です。&lt;br&gt;
ですがこの状態ではまだお試し版なので今度はインストールを行います
Install Linux Mintのアイコンをダブルクリック&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キーボードを選択, 英語配列キーボードを使っている場合でもとりあえずはこれでOK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;余計なものを入れたくないのでチェックを外す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一番を上のもの選ぶ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地域はTokyo選択&lt;/li&gt;
&lt;li&gt;ユーザーを設定を行う&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ここまで行うとOSのインストールが始まる。&lt;br&gt;
インストールが終わると一度シャットダウンします。&lt;/p&gt;
&lt;p&gt;メディア→DVDドライブ→ディスク取り出しして起動&lt;/p&gt;
&lt;p&gt;これでOSのインストールは完了&lt;/p&gt;
&lt;h3 id=&#34;仮想環境os設定&#34;&gt;仮想環境OS設定&lt;/h3&gt;
&lt;p&gt;まずいつものパッケージアップデート&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt update
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo apt upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;英語配列のキーボードを使っている場合は右下のキーボードマーク右クリック設定&lt;br&gt;
以下のようなダイアログがでるので&lt;code&gt;＋ボタン&lt;/code&gt;を押して&lt;code&gt;キーボード 英語&lt;/code&gt;を選ぶ、そのあと&lt;code&gt;↑ボタン&lt;/code&gt;で&lt;code&gt;キーボード 英語&lt;/code&gt;の優先度を上げます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/016.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sakuya712/sakunoteImages/master/HyperV_LAN/017.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ここでいよいよSambaをインストールする&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt install samba
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;インストールが完了したら設定ファイルを開く&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo nano /etc/samba/smb.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そこから[global]の要素を見つけて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;[global]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;dos charset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;CP932&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;unix charset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;UTF-8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を追加する&lt;br&gt;
Windowsのワークグループ名変えている場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;workgroup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;WORKGROUP&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を変更&lt;br&gt;
最終行まで行って以下のものを追加する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;[share]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/home/share/&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;guest ok&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;guest only&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;crate mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;0777&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;directory mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;0777&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;誰でも書き込みOK、ゲストもOKという設定です。個人PC内の環境なので、セキュリティは考えてない&lt;br&gt;
書き終わったら、[Ctrl + S]で保存、[Ctrl + X]で閉じる&lt;/p&gt;
&lt;p&gt;共有フォルダを作成する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 共有フォルダ作成&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;sudo mkdir /home/share
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 共有できるように、ディレクトリの所有者、グループを変更&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;sudo chown nobody:nogroup /home/share/
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 誰でも読み書きできるようにする。&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;sudo chmod &lt;span class=&#34;m&#34;&gt;777&lt;/span&gt; /home/share/
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 適当にファイル作成&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;touch /home/share/test.txt
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sambaを再起動&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;sudo service smbd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おまけでシンボリックリンク(ショートカットカット)をデスクトップに作成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; デスクトップ
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;ln -s /home/share
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後にIPアドレスを固定にする&lt;br&gt;
Linux Mintはwindowsと同じ感覚でIPを固定できます&lt;br&gt;
→&lt;a href=&#34;https://inakadeikinaosu.com/pc/ipadress_kotei/&#34;&gt;IPアドレスを固定にする方法(Linux Mint)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再起動してIPアドレスが設定したものになったか確認する&lt;/p&gt;
&lt;h2 id=&#34;接続確認&#34;&gt;接続確認&lt;/h2&gt;
&lt;p&gt;WindowsではPCフォルダ右クリックで&lt;code&gt;ネットワークの場所を追加する&lt;/code&gt;を選び、
&lt;code&gt;\\[固定したプライベートIP]\share\&lt;/code&gt;を入力する。&lt;br&gt;
ユーザーとパスワードが聞かれるので、Linux Mint側で作ったアカウント情報を入れると接続できます。&lt;br&gt;
読み込み/書き込みができたら成功です。&lt;/p&gt;
&lt;p&gt;あとはこのフォルダの配下に共有したいファイルを入れていくだけです。&lt;br&gt;
お疲れ様でした。&lt;/p&gt;
&lt;h2 id=&#34;バックアップ方法&#34;&gt;バックアップ方法&lt;/h2&gt;
&lt;p&gt;バックアップは仮想マシン一覧からバックアップを取りたいものを右クリック→エクスポート&lt;br&gt;
保存先を入れれば完了です。&lt;br&gt;
逆に取り込みたい場合は&lt;code&gt;仮想マシンのインポート&lt;/code&gt;を行う。&lt;br&gt;
このエクスポートは自動化できるみたいなのでこれは別の記事で書きたいと思う。&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>Hugoで作成してみた</title>
      <link>https://sakuya712.github.io/post/hugotest/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sakuya712.github.io/post/hugotest/</guid>
      <description>
        
          &lt;p&gt;本当に簡単に作れる&lt;/p&gt;
&lt;h2 id=&#34;これすごい&#34;&gt;これすごい&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;gitとMarkdownの知識だけあればサイトが作れる&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;html、cssなどのフロントエンドの知識は不要&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新反映はgitにアップロードするだけ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ブログにはピッタリ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ローカル環境では保存すれば瞬時にhtmlを生成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ハイライトも好きなものから選べる。お気に入りのmonokaiも使える&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/alecthomas/chroma&#34;&gt;対応言語もいっぱい&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/m-M1AtrxztU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;ul&gt;
&lt;li&gt;通常マークダウンではできない、youtubeとかも貼れる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;絵文字も使えるよ😄&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
